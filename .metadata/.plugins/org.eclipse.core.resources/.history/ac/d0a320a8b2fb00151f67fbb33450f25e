package com.cwenhui.chowhound.widget;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.cwenhui.chowhound.bean.ShopCartActionItem;
import com.cwenhui.chowhound.widget.CustomQuickAction.Direction;
import com.example.chowhound.R;

public class ShopCartQuickAction extends CustomQuickAction<ShopCartActionItem> {
	private static final String TAG = "ShopCartQuickAction";
	private onClickShopCartListener shopCartListener;

	public ShopCartQuickAction(Context context) {
		super(context);
	}

	public void setOnClickShopCartListener(onClickShopCartListener shopCartListener) {
		this.shopCartListener = shopCartListener;
	}

	@Override
	public void addQuickActionItem(ShopCartActionItem item) {
		mItems.add(item);

		View container = mInflater.inflate(R.layout.item_shop_cart_quick_action, null);

		TextView goodsName = (TextView) container.findViewById(R.id.tv_item_shop_cart_quickaction_name);
		TextView price = (TextView) container.findViewById(R.id.tv_item_shop_cart_quickaction_price);
		TextView selectedNum = (TextView) container.findViewById(R.id.tv_item_shop_cart_quickaction_num);
		Button add = (Button) container.findViewById(R.id.btn_item_shop_cart_quickaction_add);
		Button del = (Button) container.findViewById(R.id.btn_item_shop_cart_quickaction_del);

		if(item != null){
			goodsName.setText(item.getGoodsName());
			price.setText(item.getPrice());
			selectedNum.setText(item.getSelectedNum());
		}else{
			container.setVisibility(View.GONE);
		} 

		final int mCurrentActionId = item.getActionId();
		setOnShopCartClickListener(add, mCurrentActionId, selectedNum);
		setOnShopCartClickListener(del, mCurrentActionId, selectedNum);

		mQuickActionLayout.addView(container);
	}

	private void setOnShopCartClickListener(Button add, final int mCurrentActionId, final TextView selectedNum) {
		add.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(shopCartListener != null){
					if(v.getId() == R.id.btn_item_shop_cart_quickaction_add){
						shopCartListener.onClickAdd(mCurrentActionId, selectedNum);
					}else{
						shopCartListener.onClickDel(mCurrentActionId, selectedNum);
					}
				}
			}
		});
	}

	@Override
	public void initQuickAction(Context context) {
		mRootView = (ViewGroup) mInflater.inflate(R.layout.layout_shop_cart_quickaction, null);
		mQuickActionLayout = (LinearLayout) mRootView.findViewById(R.id.shop_cart_layout_quickaction);
		mRootView.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
		setContentView(mRootView);
	}
	
	public void removeActionItem(int index, View anchor){
		mQuickActionLayout.removeViewAt(index);
		mItems.remove(index);
		Direction showDirection = computeDisplayPosition(anchor);			// 位置
		int[] locations = preShow(anchor, showDirection);					// 根据位置，显示箭头
		Log.e(TAG, "locations[0]"+locations[0]+"   locations[1]"+locations[1]);
		if (locations != null) {											// 显示PopupWindow
			showAtLocation(anchor, Gravity.NO_GRAVITY, locations[0], locations[1]);
		}

//		mQuickActionLayout.removeAllViews();
//		mItems.remove(index);
//		List<ShopCartActionItem> temp = new ArrayList<ShopCartActionItem>();
//		temp.addAll(mItems);
//		mItems.clear();
//		Log.e(TAG, "mItems.size()->"+temp.size());
//		for (ShopCartActionItem shopCartActionItem : temp) {
//			addQuickActionItem(shopCartActionItem);
//		}
	}

	public void removeAllActionItem(){
		mQuickActionLayout.removeAllViews();		//除了将数据清除之外还要将mQuickActionLayout里面的子视图清除
		mItems.clear();
	}
	
	public interface onClickShopCartListener{
		public void onClickDel(int mCurrentActionId, TextView num);
		public void onClickAdd(int mCurrentActionId, TextView num);
	}
}
